#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Lean-Wrt1900

on: 
  release:
    types: [published]

  #push:
  #  branches: 
  #    - master

  #schedule:
  #  - cron: 0 01 * * *
  
  #watch:
  #  types: [started]

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        echo "Deleting files, please wait ..."
        sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d/*
        sudo swapoff /swapfile
        sudo rm -f /swapfile
        #docker rmi `docker images -q`
        #sudo -E apt-get -q purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        curl -fsSL https://raw.githubusercontent.com/P3TERX/dotfiles/master/.bashrc >> ~/.bashrc
        sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

    - name: Clone source code
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
      
    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        sed -i 's/192.168.1.1/192.168.8.192/g' package/base-files/files/bin/config_generate
        sed -i 's/OpenWrt/WRT1900AC V2/g' package/base-files/files/bin/config_generate
        sed -i '4a src-git lienol https://github.com/Lienol/openwrt-package' feeds.conf.default
        ./scripts/feeds update -a
        rm -rf feeds/lienol/others/luci-app-verysync && rm -rf feeds/lienol/package/shadowsocksr-libev && rm -rf feeds/lienol/package/trojan && rm -rf feeds/lienol/package/v2ray && rm -rf feeds/lienol/package/pdnsd-alt && rm -rf feeds/lienol/package/openssl1.1 && rm -rf feeds/lienol/package/ipt2socks && rm -rf feeds/lienol/package/verysync && rm -rf package/lean/kcptun && rm -rf package/lean/luci-app-kodexplorer && rm -rf package/lean/luci-app-pppoe-relay && rm -rf package/lean/luci-app-pptp-server && rm -rf package/lean/luci-app-v2ray-server
        ./scripts/feeds install -a
        ./scripts/feeds install -a
    - name: Configuration Customization - Build_Wrt1900
      env:
        CONFIG_FILE: 'wrt1900.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        cd openwrt
        cp ../wrt1900 .config
    #- name: SSH connection to Actions
    #  uses: wubin2/AutoBuild-CSCLEDE@master
    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    - name: Build firmware
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s
        
    - name: Assemble artifact
      run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          #find openwrt/bin/targets/ -name "*sysupgrade*bin*" | xargs -i mv -f {} ./artifact/
          find openwrt/bin/targets/ -name "*squashfs-factory*img*" | xargs -i mv -f {} ./artifact/
          #find openwrt/bin/targets/ -name "*combined*vmdk*" | xargs -i mv -f {} ./artifact/

    - name: Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: wrt1900
        path: ./artifact/
