#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
# 

name: Lean_x64

on: 
  release:
    types: [published]

  push:
    branches: 
      - master

  #schedule:
  #  - cron: 0 01 * * *
  
  #watch:
  #  types: [started]

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  TZ: Asia/Shanghai

jobs:

  build_openwrt:

    name: Build OpenWrt and release
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          df -h
             
      - name: Clone source code
        run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
      
      - name: Update feeds
        run: |
          cd openwrt
          sed -i 's/\"#src-git\"/\"src-git\"/g' ./feeds.conf.default
          sed -i 's/192.168.1.1/192.168.2.55/g' package/base-files/files/bin/config_generate
          sed -i 's/OpenWrt/HP GEN8/g' package/base-files/files/bin/config_generate
          sed -i '$a src-git lienol https://github.com/Lienol/openwrt-package' feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a
                    
#      - name: Install Luci for Clash
#        working-directory: ./openwrt
#        run: |
#          git clone https://github.com/frainzy1477/luci-app-clash
        
      - name: Generate configuration file
        working-directory: ./openwrt
        run:
          rm -f ./.config*
          touch ./.config
          cat >> .config <<EOF
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_Generic=y
          EOF
          cat >> .config <<EOF
          CONFIG_NFS_KERNEL_SERVER_V4=y
          CONFIG_PACKAGE_kmod-crypto-cts=y
          CONFIG_PACKAGE_kmod-dax=y
          CONFIG_PACKAGE_kmod-dm=y
          CONFIG_PACKAGE_kmod-dnsresolver=y
          CONFIG_PACKAGE_kmod-fs-exportfs=y
          CONFIG_PACKAGE_kmod-fs-nfs-common-rpcsec=y
          CONFIG_PACKAGE_kmod-fs-nfs=y
          CONFIG_PACKAGE_kmod-fs-nfs-common=y
          CONFIG_PACKAGE_kmod-fs-nfs-v3=y
          CONFIG_PACKAGE_kmod-fs-nfs-v4=y
          CONFIG_PACKAGE_kmod-fs-nfsd=y
          CONFIG_PACKAGE_libdevmapper=y
          CONFIG_PACKAGE_libkeyutils=y
          CONFIG_PACKAGE_libtirpc=y
          CONFIG_PACKAGE_libwrap=y
          CONFIG_PACKAGE_nfs-kernel-server=y
          CONFIG_PACKAGE_nfs-kernel-server-utils=y
          CONFIG_PACKAGE_nfs-utils-libs=y
          CONFIG_PACKAGE_rpcbind=y
          CONFIG_PACKAGE_yaaw=y
          CONFIG_RPCBIND_LIBWRAP=y
          CONFIG_RPCBIND_RMTCALLS=y
          CONFIG_PACKAGE_openssh-sftp-server=y          
          EOF
          cat >> .config <<EOF
          CONFIG_PACKAGE_kmod-usb-ohci=y
          CONFIG_PACKAGE_kmod-usb-ohci-pci=y
          CONFIG_PACKAGE_kmod-usb2=y
          CONFIG_PACKAGE_kmod-usb2-pci=y
          CONFIG_PACKAGE_kmod-usb3=y
          CONFIG_PACKAGE_kmod-b44=y
          CONFIG_PACKAGE_kmod-phy-broadcom=y
          CONFIG_PACKAGE_kmod-phylib-broadcom=y
          CONFIG_PACKAGE_kmod-ssb=y
          CONFIG_PACKAGE_kmod-tg3=y
          CONFIG_PACKAGE_cifsmount=y
          CONFIG_PACKAGE_kmod-fs-cifs=y
          CONFIG_PACKAGE_nfs-utils=y
          EOF
          cat >> .config <<EOF     
          CONFIG_PACKAGE_luci-app-aria2=y
          CONFIG_PACKAGE_luci-app-arpbind=y
          CONFIG_PACKAGE_luci-app-autoreboot=y
          CONFIG_PACKAGE_luci-app-ddns=y
          CONFIG_PACKAGE_luci-app-filetransfer=y
          CONFIG_PACKAGE_luci-app-firewall=y
          CONFIG_PACKAGE_luci-app-flowoffload=y
          CONFIG_PACKAGE_luci-app-hd-idle=y
          CONFIG_PACKAGE_luci-app-ipsec-vpnd=y
          CONFIG_PACKAGE_luci-app-minidlna=y
          CONFIG_PACKAGE_luci-app-nlbwmon=y
          CONFIG_PACKAGE_luci-app-openvpn-server=y
          CONFIG_PACKAGE_luci-app-passwall=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ipt2socks=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ShadowsocksR=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_socks=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ShadowsocksR_socks=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_V2ray=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Trojan=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Brook=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_haproxy=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ChinaDNS_NG=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_pdnsd=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_dns2socks=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_v2ray-plugin=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_simple-obfs=y
          CONFIG_PACKAGE_luci-app-ramfree=y
          CONFIG_PACKAGE_luci-app-samba=y 
          CONFIG_PACKAGE_luci-app-smartdns=y
          CONFIG_PACKAGE_luci-app-ssr-plus=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Simple_obfs=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray_plugin=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Trojan=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Redsocks2=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_DNS2SOCKS=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Socks=y
          CONFIG_PACKAGE_luci-app-ssr-python-pro-server=y
          CONFIG_PACKAGE_luci-app-usb-printer=y
          CONFIG_PACKAGE_luci-app-v2ray-server=y
          CONFIG_PACKAGE_luci-app-vlmcsd=y
          CONFIG_PACKAGE_luci-app-wol=y
          CONFIG_PACKAGE_luci-app-openclash=y
          CONFIG_PACKAGE_luci-app-airplay2=y
          CONFIG_PACKAGE_luci-app-clash=y
          EOF
          cat >> .config <<EOF
          CONFIG_PACKAGE_luci-theme-bootstrap=y
          EOF
          cat >> .config <<EOF
          CONFIG_PACKAGE_curl=y
          CONFIG_PACKAGE_htop=y
          CONFIG_PACKAGE_nano=y
          CONFIG_PACKAGE_screen=y
          CONFIG_PACKAGE_tree=y
          CONFIG_PACKAGE_vim-fuller=y
          CONFIG_PACKAGE_wget=y
          CONFIG_PACKAGE_blkid=y
          CONFIG_PACKAGE_hd-idle=y
          CONFIG_PACKAGE_iperf3=y
          CONFIG_PACKAGE_mount-utils=y
          CONFIG_PACKAGE_e2fsprogs=y
          CONFIG_PACKAGE_automount=y
          CONFIG_PACKAGE_autosamba=y
          CONFIG_PACKAGE_fdisk=y
          CONFIG_PACKAGE_e2fsprogs=y
          CONFIG_PACKAGE_shadowsocksr-libev-server=y
          EOF
          make defconfig

      - name: Make download
        run: |
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin
          
      - name: Prepare artifact
        run: find ./bin/targets/ -type d -name "packages" | xargs rm -rf {}

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/
